-- calculo_finiquito_batch.sql
-- Query optimizada para calcular finiquitos de múltiples empleados en una sola llamada.
-- Parámetros esperados: una lista de tuplas (np, fecha_desvinculacion, tipo_solicitud, grat), construida dinámicamente desde Python.

WITH parametros AS (
    SELECT * FROM (VALUES
        -- Python debe generar dinámicamente las filas:
        -- (%(np_1)s, %(fecha_desvinculacion_1)s, %(tipo_solicitud_1)s, %(grat)s),
        -- (%(np_2)s, %(fecha_desvinculacion_2)s, %(tipo_solicitud_2)s, %(grat)s)
        -- ...
    ) AS t(np, fecha_desvinculacion, tipo_solicitud, grat)
),
BASE_LIQ AS (
    SELECT
        l.NUMERO_DE_PERSONAL,
        l.CC_NOMINA,
        l.MARCA,
        REPLACE(l.CANTIDAD, ',', '.')::DOUBLE PRECISION AS CANTIDAD,
        l.IMPORTE::DOUBLE PRECISION AS IMPORTE,
        p.fecha_desvinculacion,
        p.tipo_solicitud,
        p.grat
    FROM FLESAN_RRHH.SAP_LIQUIDACIONES_GRUPO_FLESAN l
    JOIN parametros p ON l.NUMERO_DE_PERSONAL = p.np
),
BASE_CC_NOMINA AS (
    SELECT
        NUMERO_DE_PERSONAL,
        MAX(CC_NOMINA) AS CC_NOMINA,
        MARCA
    FROM BASE_LIQ
    WHERE CC_NOMINA IN ('MT70', 'MT71', 'MT72', 'MT80', 'MT81', 'MT82')
    GROUP BY NUMERO_DE_PERSONAL, MARCA
),
CONTADOR AS (
    SELECT
        NUMERO_DE_PERSONAL,
        MARCA,
        fecha_desvinculacion,
        tipo_solicitud
    FROM BASE_LIQ
    WHERE CC_NOMINA IN ('/TTK', 'MT74', 'MT70', 'MT71', 'MT72', 'MT80', 'MT81', 'MT82')
      AND (
        (tipo_solicitud = 'R' AND MARCA < TO_CHAR(fecha_desvinculacion::DATE, 'YYYY-MM'))
        OR (tipo_solicitud = 'S' AND MARCA < TO_CHAR(fecha_desvinculacion::DATE - INTERVAL '1 MONTH', 'YYYY-MM'))
      )
    GROUP BY NUMERO_DE_PERSONAL, MARCA, fecha_desvinculacion, tipo_solicitud
    ORDER BY MARCA DESC
    LIMIT 3
),
CONTADOR_1 AS (
    SELECT
        COUNT(*) AS CONTA,
        NUMERO_DE_PERSONAL
    FROM CONTADOR
    GROUP BY NUMERO_DE_PERSONAL
),
VARIABL AS (
    SELECT
        L.NUMERO_DE_PERSONAL,
        L.MARCA,
        MAX(L.CANTIDAD) AS CANTIDAD,
        C1.CONTA,
        L.fecha_desvinculacion,
        L.tipo_solicitud
    FROM BASE_LIQ L
    LEFT JOIN BASE_CC_NOMINA BCC ON L.NUMERO_DE_PERSONAL = BCC.NUMERO_DE_PERSONAL AND L.MARCA = BCC.MARCA
    LEFT JOIN CONTADOR_1 C1 ON C1.NUMERO_DE_PERSONAL = L.NUMERO_DE_PERSONAL
    WHERE L.CC_NOMINA IN ('/TTK', 'MT74', 'MT70', 'MT71', 'MT72', 'MT80', 'MT81', 'MT82')
      AND (
        (L.tipo_solicitud = 'R' AND L.MARCA < TO_CHAR(L.fecha_desvinculacion::DATE, 'YYYY-MM'))
        OR (L.tipo_solicitud = 'S' AND L.MARCA < TO_CHAR(L.fecha_desvinculacion::DATE - INTERVAL '1 MONTH', 'YYYY-MM'))
      )
      AND BCC.CC_NOMINA IS NULL
    GROUP BY L.NUMERO_DE_PERSONAL, L.MARCA, C1.CONTA, L.fecha_desvinculacion, L.tipo_solicitud
    ORDER BY L.MARCA DESC
    LIMIT 3
),
NO_VARIABL AS (
    SELECT
        NUMERO_DE_PERSONAL,
        MARCA,
        CANTIDAD
    FROM BASE_LIQ
    WHERE CC_NOMINA = '/TTK' AND MARCA < TO_CHAR(CURRENT_DATE - INTERVAL '1 MONTH', 'YYYY-MM')
    ORDER BY MARCA DESC
    LIMIT 1
),
BASE_1 AS (
    SELECT
        L.NUMERO_DE_PERSONAL,
        L.IMPORTE,
        L.MARCA,
        COALESCE(REPLACE(UR.CANTIDAD::VARCHAR, ',', '.'), '0') AS CANTIDAD
    FROM BASE_LIQ L
    LEFT JOIN BASE_LIQ UR ON UR.MARCA = L.MARCA AND UR.CC_NOMINA = '/TTK' AND L.NUMERO_DE_PERSONAL = UR.NUMERO_DE_PERSONAL
    WHERE L.CC_NOMINA = 'MI11' AND COALESCE(REPLACE(UR.CANTIDAD::VARCHAR, ',', '.'), '0')::DOUBLE PRECISION > 0
    ORDER BY L.MARCA DESC
    LIMIT 1
),
BASE_GRATI AS (
    SELECT
        L.NUMERO_DE_PERSONAL,
        'MI11' AS CC_NOMINA,
        CASE WHEN ((B1.IMPORTE / NULLIF(L.CANTIDAD, 0)) * 30) > L.grat THEN L.grat
             ELSE ROUND((B1.IMPORTE / NULLIF(L.CANTIDAD, 0)) * 30)
        END AS IMPORTE,
        'IMPONIBLE' AS TIPO,
        'NO VARIABLE' AS TIPO1
    FROM BASE_LIQ L
    LEFT JOIN BASE_1 B1 ON B1.NUMERO_DE_PERSONAL = L.NUMERO_DE_PERSONAL
    WHERE L.CC_NOMINA = '/TTK'
    ORDER BY L.MARCA DESC
    LIMIT 1
),
FINAL_UNION AS (
    SELECT
        L.NUMERO_DE_PERSONAL,
        MAX(L.CC_NOMINA) AS CC_NOMINA,
        SUM(L.IMPORTE) / NULLIF(V.CONTA, 0) AS IMPORTE,
        'IMPONIBLE' AS TIPO,
        'VARIABLE' AS TIPO1
    FROM BASE_LIQ L
    LEFT JOIN VARIABL V ON L.NUMERO_DE_PERSONAL = V.NUMERO_DE_PERSONAL AND L.MARCA = V.MARCA
    WHERE L.CC_NOMINA IN ('1008', '1010', '1011', '1012', '1013', '1014', '1015', '1016', '1019', '1031', '1035', '1036', '1042', '1060', '1066', '1065', '1067')
      AND V.NUMERO_DE_PERSONAL IS NOT NULL
    GROUP BY L.NUMERO_DE_PERSONAL, V.CONTA
    UNION ALL
    SELECT
        L.NUMERO_DE_PERSONAL,
        MAX(L.CC_NOMINA) AS CC_NOMINA,
        SUM(L.IMPORTE) / NULLIF(V.CONTA, 0) AS IMPORTE,
        'NO IMPONIBLE' AS TIPO,
        'VARIABLE' AS TIPO1
    FROM BASE_LIQ L
    LEFT JOIN VARIABL V ON L.NUMERO_DE_PERSONAL = V.NUMERO_DE_PERSONAL AND L.MARCA = V.MARCA
    WHERE L.CC_NOMINA IN ('1017', '1032', '1034', '1033', '1007')
      AND V.NUMERO_DE_PERSONAL IS NOT NULL
    GROUP BY L.NUMERO_DE_PERSONAL, V.CONTA
    UNION ALL
    SELECT
        C.NP::VARCHAR,
        C.CC_NOMINA,
        C.VALOR AS IMPORTE,
        'IMPONIBLE' AS TIPO,
        'NO VARIABLE' AS TIPO1
    FROM FLESAN_RRHH.SAP_MAESTRO_COMPENSACION C
    JOIN parametros p ON C.NP::BIGINT = p.np::BIGINT
    WHERE C.CC_NOMINA IN ('M020')
    UNION ALL
    SELECT
        L.NUMERO_DE_PERSONAL,
        L.CC_NOMINA,
        (L.IMPORTE / NULLIF(NV.CANTIDAD::DOUBLE PRECISION, 0)) * 30 AS IMPORTE,
        'NO IMPONIBLE' AS TIPO,
        'NO VARIABLE' AS TIPO1
    FROM BASE_LIQ L
    LEFT JOIN NO_VARIABL NV ON L.NUMERO_DE_PERSONAL = NV.NUMERO_DE_PERSONAL AND L.MARCA = NV.MARCA
    WHERE L.CC_NOMINA IN ('1001', '1002') AND NV.NUMERO_DE_PERSONAL IS NOT NULL
    UNION ALL
    SELECT
        C.NP::VARCHAR,
        C.CC_NOMINA,
        C.VALOR AS IMPORTE,
        'IMPONIBLE' AS TIPO,
        'NO VARIABLE' AS TIPO1
    FROM FLESAN_RRHH.SAP_MAESTRO_COMPENSACION C
    JOIN parametros p ON C.NP::BIGINT = p.np::BIGINT
    WHERE C.CC_NOMINA IN ('1018', '1029')
    UNION ALL
    SELECT * FROM BASE_GRATI
),
VAC_BASE1 AS (
    SELECT
        NP,
        MAX(CAST(TO_TIMESTAMP(SUBSTRING(FECHA_VACACION, 1, 10)::BIGINT) + INTERVAL '1 DAYS' AS DATE)) AS FECHA
    FROM FLESAN_RRHH.SAP_PONDERACION_VACACIONES
    JOIN parametros p ON c.NP::BIGINT = p.np::BIGINT
    WHERE PONDERACION_VACACIONES > 0
    GROUP BY c.NP::BIGINT
),
VAC_BASE AS (
    SELECT
        V.NP,
        SUM(V.PONDERACION_VACACIONES) AS PONDERACION,
        VB1.FECHA
    FROM FLESAN_RRHH.SAP_PONDERACION_VACACIONES V
    LEFT JOIN VAC_BASE1 VB1 ON VB1.NP = V.NP
    JOIN parametros p ON V.NP = p.np
    WHERE V.PONDERACION_VACACIONES > 0
      AND CAST(TO_TIMESTAMP(SUBSTRING(V.FECHA_VACACION, 1, 10)::BIGINT) + INTERVAL '1 DAYS' AS DATE) = VB1.FECHA
    GROUP BY V.NP, VB1.FECHA
),
JB_VACACIONES AS (
    SELECT
        V.NP,
        SUM(V.PONDERACION_VACACIONES) AS PONDERACION_VACACIONES,
        VB.FECHA AS FECHA_VACACION,
        VB.PONDERACION
    FROM FLESAN_RRHH.SAP_PONDERACION_VACACIONES V
    LEFT JOIN VAC_BASE VB ON VB.NP = V.NP
    JOIN parametros p ON V.NP = p.np
    WHERE CAST(TO_TIMESTAMP(SUBSTRING(V.FECHA_VACACION, 1, 10)::BIGINT) + INTERVAL '1 DAYS' AS DATE) <= VB.FECHA
    GROUP BY V.NP, VB.PONDERACION, VB.FECHA
)
SELECT
    f.NUMERO_DE_PERSONAL,
    f.CC_NOMINA,
    SUM(f.IMPORTE) AS IMPORTE,
    f.TIPO,
    CASE
        WHEN f.CC_NOMINA = 'M020' THEN 'BASE'
        WHEN f.CC_NOMINA = 'MI11' THEN 'GRATIFICACION'
        WHEN f.CC_NOMINA = '1018' THEN 'COLACION'
        WHEN f.CC_NOMINA = '1029' THEN 'MOVILIZACION'
        ELSE 'VARIABLE'
    END AS TIPO_2,
    CASE
        WHEN LENGTH(mc.FECHA_ANTIGUEDAD) = 12 THEN CAST(TO_TIMESTAMP(SUBSTRING(mc.FECHA_ANTIGUEDAD, 1, 9)::BIGINT) + INTERVAL '1 DAYS' AS DATE)
        ELSE CAST(TO_TIMESTAMP(SUBSTRING(mc.FECHA_ANTIGUEDAD, 1, 10)::BIGINT) + INTERVAL '1 DAYS' AS DATE)
    END AS FECHA_INGRESO,
    CASE
        WHEN mc.FECHA_FIN_CONTRATO = '32503680000000' THEN CAST(TO_TIMESTAMP(SUBSTRING(mc.FECHA_FIN_CONTRATO, 1, 11)::BIGINT) + INTERVAL '1 DAYS' AS DATE)
        ELSE CAST(TO_TIMESTAMP(SUBSTRING(mc.FECHA_FIN_CONTRATO, 1, 10)::BIGINT) + INTERVAL '1 DAYS' AS DATE)
    END AS FECHA_ESTIMADA_TERMINO,
    bl.fecha_desvinculacion AS FECHA_RETIRO,
    CASE
        WHEN bl.fecha_desvinculacion::DATE - (
            CASE
                WHEN LENGTH(mc.FECHA_ANTIGUEDAD) = 12 THEN CAST(TO_TIMESTAMP(SUBSTRING(mc.FECHA_ANTIGUEDAD, 1, 9)::BIGINT) + INTERVAL '1 DAYS' AS DATE)
                ELSE CAST(TO_TIMESTAMP(SUBSTRING(mc.FECHA_ANTIGUEDAD, 1, 10)::BIGINT) + INTERVAL '1 DAYS' AS DATE)
            END
        ) >= 30 THEN jv.PONDERACION_VACACIONES ELSE 0
    END AS PONDERACION_VACACIONES,
    CASE
        WHEN bl.fecha_desvinculacion::DATE - (
            CASE
                WHEN LENGTH(mc.FECHA_ANTIGUEDAD) = 12 THEN CAST(TO_TIMESTAMP(SUBSTRING(mc.FECHA_ANTIGUEDAD, 1, 9)::BIGINT) + INTERVAL '1 DAYS' AS DATE)
                ELSE CAST(TO_TIMESTAMP(SUBSTRING(mc.FECHA_ANTIGUEDAD, 1, 10)::BIGINT) + INTERVAL '1 DAYS' AS DATE)
            END
        ) >= 30 THEN jv.FECHA_VACACION ELSE bl.fecha_desvinculacion::DATE
    END AS FECHA_VACACION,
    CASE
        WHEN bl.fecha_desvinculacion::DATE - (
            CASE
                WHEN LENGTH(mc.FECHA_ANTIGUEDAD) = 12 THEN CAST(TO_TIMESTAMP(SUBSTRING(mc.FECHA_ANTIGUEDAD, 1, 9)::BIGINT) + INTERVAL '1 DAYS' AS DATE)
                ELSE CAST(TO_TIMESTAMP(SUBSTRING(mc.FECHA_ANTIGUEDAD, 1, 10)::BIGINT) + INTERVAL '1 DAYS' AS DATE)
            END
        ) >= 30 THEN jv.PONDERACION ELSE 0
    END AS PONDERACION
FROM FINAL_UNION f
LEFT JOIN FLESAN_RRHH.SAP_MAESTRO_COLABORADOR mc ON mc.USER_ID::VARCHAR = f.NUMERO_DE_PERSONAL
LEFT JOIN JB_VACACIONES jv ON jv.NP::VARCHAR = f.NUMERO_DE_PERSONAL
LEFT JOIN BASE_LIQ bl ON bl.NUMERO_DE_PERSONAL = f.NUMERO_DE_PERSONAL
GROUP BY
    f.NUMERO_DE_PERSONAL,
    f.CC_NOMINA,
    f.TIPO,
    mc.FECHA_ANTIGUEDAD,
    mc.FECHA_TERMINO,
    mc.FECHA_FIN_CONTRATO,
    jv.PONDERACION_VACACIONES,
    jv.FECHA_VACACION,
    jv.PONDERACION,
    bl.fecha_desvinculacion
ORDER BY f.NUMERO_DE_PERSONAL, IMPORTE ASC;
